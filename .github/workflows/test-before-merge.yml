# test.yml

name: "Build Test Before Merge"

# workflow 를 동작하기 위한 Trigger 내용입니다.
# main Branch 에 대한 PR 이 Open 혹은 Sync 될때 아래의 Job 이 실행됩니다.
on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main

# jobs 은 step 으로 구성할 수 있고, 이러한 step 을 병렬로 나누어서 실행도 가능합니다.
# 여러개의 job 을 설정하여 사용이 가능하며, job 간에 정보교환도 가능합니다.

jobs:
  test:
    name: Test && Reporting
    runs-on: ubuntu-latest
    # Github Action 의 실행전략을 새웁니다.
    # Node Version 을 설치할때 18 버전을 사용하도록 합니다.
    strategy:
      matrix:
        node-versions: [18.x]
    # job 의 step 을 정의합니다.
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # pnpm-store 를 캐싱하여 이미 다운로드된 종속성이 로컬에 저장되므로 다시 다운로드 하지 않습니다.
      # node_module 과 next Cache 를 caching 하여 시간을 단축할 수 있습니다.
      - uses: actions/cache@v3
        name: Setup pnpm cache
        id: cache
        with:
          path: |
            node_modules
            ${{ github.workspace }}/.next/cache
          key: cache-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            cache-
      # 12
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      # Lint Test 진행 합니다.
      # if 문에 always() 를 추가하면 이전에 실패한 부분이 생기더라도 무조건 실행하게 됩니다.
      - name: Lint Test
        id: Lint-Test
        run: pnpm lint
        if: ${{ always() }}

      # Type Check Test 진행 합니다.
      - name: Type Check
        id: Type-Check
        run: pnpm typecheck
        if: ${{ always() }}

      # Build Test 진행 합니다.
      - name: Build Test
        id: Build-Test
        run: pnpm build
        if: ${{ always() }}

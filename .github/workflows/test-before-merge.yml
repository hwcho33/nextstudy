# test.yml

name: "Test Before Merge"

on: pull_request

jobs:
  test:
    name: Lint, Type, Build Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-versions: ${{ secrets.NODE_VERSION }}

      ## pnpm Cache
      #- name: Cache pnpm
      #  uses: actions/cache@v2
      #  with:
      #    path: ~/.pnpm-store
      #    key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      #    restore-keys: |
      #      ${{ runner.os }}-pnpm-
      #    if: steps.setup-node.outputs.cache-hit != 'true'

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install -g pnpm
          pnpm install
          
      - name: Lint, Type, Build
        run: |
          pnpm run lint
          pnpm run tsc
        if: ${{ always() }}
      
      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ~/.next  # 빌드 캐시를 저장할 디렉토리 지정
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-
          if: steps.setup-node.outputs.cache-hit != 'true'

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pnpm build

      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: "#workflows"
          webhook-url: ${{ secrets.SLACK_INCOMING_URL }}
        if: always()

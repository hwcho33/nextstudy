# test.yml

name: "Build Test Before Merge"

on:
  pull_request:
    types:
      - opened # pull request가 열린 경우에만 실행
      - synchronize
    branches:
      - main # main 브랜치로의 pull request에서 실행
jobs:
  test:
    name: Test && Reporting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-versions: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false


      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        id: Cache-Work
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      #- name: Get pnpm store directory
      #  shell: bash
      #  run: |
      #    echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      #- uses: actions/cache@v3
      #  name: Setup pnpm cache
      #  id: Cache-Work
      #  with:
      #    path: |
      #      ${{ env.STORE_PATH }}
      #      ${{ github.workspace }}/.next/cache
      #    key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #    restore-keys: |
      #      ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Lint Test
        id: Lint-Test
        run: pnpm lint
        if: ${{ always() }}

      - name: Type Check
        id: Type-Check
        run: pnpm typecheck
        if: ${{ always() }}

      - name: Build Test
        id: Build-Test
        run: pnpm build
        if: ${{ always() }}

